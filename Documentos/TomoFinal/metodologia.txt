Para este trabajo especial de grado se utilizará una adaptación de la metodología eXtreme Programming (XP) en el desarrollo de los componentes de la infraestructura.  XP es una metodología ágil que permite desarrollar software a través de historias de usuario, programación en parejas, la cooperación  del cliente y el constante uso de pruebas para garantizar que el código generado cumpla con sus objetivos [9]. Se utilizan iteraciones para entregar pequeñas versiones del software que satisfacen un conjunto de requerimientos. 

La siguiente ilustración muestra las etapas del ciclo de vida de un proyecto utilizando XP:

Se empieza con las historias de usuarios, estas permiten conocer los requerimientos necesarios para cumplir con los objetivos del proyecto. Una historia de usuario es un texto breve que indica una funcionalidad del proyecto, se escriben por parte del cliente con un lenguaje natural, sin necesidad de agregar sintaxis técnica. Las historias poseen una estimación de desarrollo que puede ser una, dos o tres semanas. Más de  tres semanas indica que la historia es muy compleja y debe dividirse en sub-historias, menos de una semana indica que la historia es muy simple y se debe combinar varias historias para lograr una estimación mayor. Las historias de usuario se enfocan en las necesidades del usuario, por ello, se debe evitar colocar algoritmos o especificaciones de alguna tecnología. 

Al finalizar la elaboración de las historias de usuario, se crea el plan de iteraciones que divide el proyecto en partes, colocado en cada iteración un conjunto de historias de usuarios relacionadas.  Normalmente las iteraciones poseen una duración de una a tres semanas y  al finalizar la iteración se obtiene un entregable que el cliente debe aprobar.

En cada iteración se logran realizar las siguientes etapas:	
•	Diseño: Se elabora el diseño de cada una de las historias de usuario que fueron acordadas en la iteración actual. Se crean las tarjetas CRC (clase, responsabilidad y colaboración) que permiten conocer que clases interactuarán en el software, están compuestas por: Nombre de la clase, clases hijo (si aplica), responsabilidad (descripción de los métodos) y colaboración (relaciones con otras clases).
•	Codificación: Se codifican las historias de usuarios de la iteración, respetando las siguientes normas: estándares de codificación, creación de las pruebas unitarias antes que el código, reutilización de código, cooperación del cliente.
•	Pruebas Unitarias: Se ejecutan luego de codificar las historias de usuario y deben ser exitosas para culminar la iteración y liberar la siguiente versión del software.
Al terminar la iteración se realizan las pruebas de aceptación por parte del cliente, permiten verificar si el entregable obtenido logró cumplir con las especificaciones indicadas por las historias de usuario. En caso negativo, se debe realizar una nueva iteración para corregir errores o defectos que puedan haber surgido en el desarrollo, por el contrario, si el software es aceptado por el cliente se habrá liberado una versión del software final y se continua con la siguiente iteración del plan de iteraciones [10].

La adaptación de la metodología consiste en primer lugar en establecer el plan de iteraciones de acuerdo a los componentes necesarios en la infraestructura: Cada iteración representa un software de la infraestructura (aplicaciones sistemas distribuidos, módulos, agente, librería), adicionalmente se utilizará un único programador para realizar la fase de codificación, por lo que se obtiene una mayor duración en el desarrollo de las historias de usuario debido a que una misma persona debe tener en cuenta  la legibilidad, el uso de estándares y la optimización del código mientras  se programa la historia de usuario.
La elección de la metodología XP se debe a que los objetivos en la elaboración de la infraestructura consisten en desarrollar un grupo de componentes. XP se enfoca específicamente en crear software que funcione más allá de elaborar documentación extensa que no es útil cuando el software no realiza su propósito correctamente. Utilizando historias de usuario se obtienen los requerimientos de cada componente de la infraestructura de forma precisa. Mediante iteraciones se logra dividir el proyecto en partes, cada iteración se encuentra dirigida a un componente de la infraestructura y permite desarrollarlos de manera independiente a excepción de las aplicaciones de sistemas distribuidos que debido a la cantidad de aplicaciones a desarrollar se dividieron en dos grupos de iteraciones. A través  del uso de pruebas unitarias se garantiza que cada método de las aplicaciones a desarrollar funciona de forma correcta y sin errores. La reutilización de código estará presente en los componentes de  la infraestructura pero principalmente en las aplicaciones educativas de sistemas distribuidos, donde en muchas existirán el esquema de servidor y el de cliente.
